name: Terraform Apply

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  terraform:
    permissions:
      pull-requests: write
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Vault Secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{vars.VAULT_ADDR}}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/data/prod/hetzner HCLOUD_TOKEN | TF_VAR_HCLOUD_TOKEN;
            secret/data/prod/hetzner HCLOUD_SSH_WARMICHI_PRIVATE_KEY | HCLOUD_SSH_WARMICHI_PRIVATE_KEY_VALUE;
            secret/data/prod/hetzner HCLOUD_SSH_WARMICHI_PUBLIC_KEY | TF_VAR_HCLOUD_SSH_WARMICHI_PUBLIC_KEY;
            secret/data/prod/argocd ARGOCD_VAULT_TOKEN | TF_VAR_ARGOCD_VAULT_TOKEN;
            secret/data/prod/terraform TF_API_TOKEN;

      - name: Save Secrets to files
        run: |
          echo "${{ env.HCLOUD_SSH_WARMICHI_PRIVATE_KEY_VALUE }}" > ${{ env.RUNNER_TEMP }}/warmichi
          chmod 600 ${{ env.RUNNER_TEMP }}/warmichi 
          echo "TF_VAR_HCLOUD_SSH_WARMICHI_PRIVATE_KEY_PATH=$(readlink -f ${{ env.RUNNER_TEMP }}/warmichi )" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}
        env:
          TF_CLI_CONFIG_FILE: /root/.terraformrc

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        env:
          BOOTSTRAP_KUBE_CLUSTER: ${{ vars.BOOTSTRAP_KUBE_CLUSTER }}
        id: apply
        run: terraform apply -auto-approve -no-color
